// Mocks generated by Mockito 5.0.7 from annotations
// in pal/test/ui/editor/pages/helper_editor/helpers/editor_simple_helper_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:flutter/src/foundation/change_notifier.dart' as _i4;
import 'package:flutter/src/widgets/framework.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pal/src/database/entity/helper/helper_entity.dart' as _i3;
import 'package:pal/src/database/entity/pageable.dart' as _i2;
import 'package:pal/src/services/editor/helper/helper_editor_models.dart'
    as _i7;
import 'package:pal/src/services/editor/helper/helper_editor_service.dart'
    as _i5;
import 'package:pal/src/services/pal/pal_state_service.dart' as _i8;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakePageable<T> extends _i1.Fake implements _i2.Pageable<T> {}

class _FakeHelperEntity extends _i1.Fake implements _i3.HelperEntity {}

class _FakeValueNotifier<T> extends _i1.Fake implements _i4.ValueNotifier<T> {}

/// A class which mocks [EditorHelperService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEditorHelperService extends _i1.Mock
    implements _i5.EditorHelperService {
  MockEditorHelperService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Pageable<_i3.HelperEntity>> getPage(
          String? route, int? page, int? pageSize) =>
      (super.noSuchMethod(Invocation.method(#getPage, [route, page, pageSize]),
              returnValue: Future<_i2.Pageable<_i3.HelperEntity>>.value(
                  _FakePageable<_i3.HelperEntity>()))
          as _i6.Future<_i2.Pageable<_i3.HelperEntity>>);
  @override
  _i6.Future<_i3.HelperEntity> getHelper(String? helperId) =>
      (super.noSuchMethod(Invocation.method(#getHelper, [helperId]),
              returnValue: Future<_i3.HelperEntity>.value(_FakeHelperEntity()))
          as _i6.Future<_i3.HelperEntity>);
  @override
  _i6.Future<_i3.HelperEntity?> saveSimpleHelper(
          _i7.CreateSimpleHelper? args) =>
      (super.noSuchMethod(Invocation.method(#saveSimpleHelper, [args]),
              returnValue: Future<_i3.HelperEntity?>.value(_FakeHelperEntity()))
          as _i6.Future<_i3.HelperEntity?>);
  @override
  _i6.Future<_i3.HelperEntity?> saveFullScreenHelper(
          _i7.CreateFullScreenHelper? createArgs) =>
      (super.noSuchMethod(
              Invocation.method(#saveFullScreenHelper, [createArgs]),
              returnValue: Future<_i3.HelperEntity?>.value(_FakeHelperEntity()))
          as _i6.Future<_i3.HelperEntity?>);
  @override
  _i6.Future<_i3.HelperEntity?> saveUpdateHelper(
          _i7.CreateUpdateHelper? createArgs) =>
      (super.noSuchMethod(Invocation.method(#saveUpdateHelper, [createArgs]),
              returnValue: Future<_i3.HelperEntity?>.value(_FakeHelperEntity()))
          as _i6.Future<_i3.HelperEntity?>);
  @override
  _i6.Future<_i3.HelperEntity?> saveAnchoredWidget(
          _i7.CreateAnchoredHelper? createArgs) =>
      (super.noSuchMethod(Invocation.method(#saveAnchoredWidget, [createArgs]),
              returnValue: Future<_i3.HelperEntity?>.value(_FakeHelperEntity()))
          as _i6.Future<_i3.HelperEntity?>);
  @override
  _i6.Future<void> updateHelperPriority(
          String? pageId, Map<String, int>? priority) =>
      (super.noSuchMethod(
          Invocation.method(#updateHelperPriority, [pageId, priority]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> deleteHelper(String? helperId) =>
      (super.noSuchMethod(Invocation.method(#deleteHelper, [helperId]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);
}

/// A class which mocks [PalEditModeStateService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPalEditModeStateService extends _i1.Mock
    implements _i8.PalEditModeStateService {
  MockPalEditModeStateService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.ValueNotifier<bool> get showEditorBubble =>
      (super.noSuchMethod(Invocation.getter(#showEditorBubble),
          returnValue: _FakeValueNotifier<bool>()) as _i4.ValueNotifier<bool>);
  @override
  dynamic showBubble(_i9.BuildContext? context, bool? show) =>
      super.noSuchMethod(Invocation.method(#showBubble, [context, show]));
}
